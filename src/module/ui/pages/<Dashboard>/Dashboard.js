import { ui } from '/module/context';const Submenus = {  Profile: require('./<Profile>/Profile.js').default(),  Settings: require('./<Settings>/Settings.js').default(),  Help: require('./<Help>/Help.js').default(),  Legal: require('./<Legal>/Legal.js').default(),};const HRefs = {  Logout: '/signin',};export default ui.hoc({  state(props, store) {    return {      currentPage: store.get('currentPage'),      submenu: store.get('dash.submenu'),      level: store.get('menu.level'),    };  },  actions(props, store) {    return {      onClick: key => {        const level = store.get('menu.level');        store.set({          'dash.submenu': key.toLowerCase(),          'menu.level': level + 1,        });      },    };  },  classes: {    submenus: `      display: flex;      flex-flow: column;      padding: 20px;    `,    submenu: `      padding: 10px;      cursor: pointer;    `,  },  styles: {    dash: isVisible => `      display: flex;      position: absolute;      justify-content: center;      align-items: center;      min-width: 100%;      height: 100%;      transition: all .6s ease-out;      overflow: hidden;      opacity: ${isVisible ? 1 : 0};      pointer-events: ${isVisible ? 'auto' : 'none'};    `,    screen: isVisible => `      position: absolute;      display: flex;      flex-flow: column;      justify-content: center;      align-items: center;      min-width: 100%;      height: 100%;      transition: all .5s ease-out;      background: white;      transform: translate3d(${isVisible ? 0 : 100}%, 0, 0);      pointer-events: ${isVisible ? 'auto' : 'none'};    `,  },  render({ styles, state, classes, actions }) {    const { currentPage, submenu, level } = state;    return ui.html`      <div id='dash' style=${styles.dash(currentPage === 'dash')}>        ${Object.keys(Submenus).map(key => {          const isVisible = level === 1 && submenu === key.toLowerCase();          return ui.html`            <div style=${styles.screen(isVisible)}>              ${Submenus[key]}            </div>          `;        })}        <div class=${classes.submenus}>          ${Object.keys(Submenus).map(key => ui.html`            <div class=${classes.submenu} @click=${() => actions.onClick(key)}>              ${key}            </div>          `)}          ${Object.keys(HRefs).map(key => ui.html`            <div class=${classes.submenu}>              <a href=${HRefs[key]}>${key}</a>            </div>          `)}        </div>      </div>    `;  }});